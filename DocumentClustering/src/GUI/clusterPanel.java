package GUI;
import ProximityHouse.ProximityMatrix;
import indexerHouse.Indexer;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import org.apache.lucene.index.CorruptIndexException;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * clusterPanel.java
 *
 * Created on Nov 7, 2011, 9:21:16 AM
 */
/**
 *
 * @author paradise lost
 */
public class clusterPanel extends javax.swing.JPanel {
   // private JProgressBar workProgress;
     
    /** Creates new form clusterPanel */
    public clusterPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sourceButton = new javax.swing.JToggleButton();
        destinationButton = new javax.swing.JButton();
        keepButton = new javax.swing.JRadioButton();
        clusterButton = new javax.swing.JButton();
        abortButton = new javax.swing.JButton();
        workProgress = new javax.swing.JProgressBar(0,100);
        sourceDir = new javax.swing.JTextField();
        destinationDir = new javax.swing.JTextField();
        actionStatus = new javax.swing.JLabel();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setName("Form"); // NOI18N
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(GUI.MINOR_PROJECTApp.class).getContext().getResourceMap(clusterPanel.class);
        sourceButton.setText(resourceMap.getString("sourceButton.text")); // NOI18N
        sourceButton.setName("sourceButton"); // NOI18N
        sourceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceButtonActionPerformed(evt);
            }
        });
        add(sourceButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 101, -1));

        destinationButton.setText(resourceMap.getString("destinationButton.text")); // NOI18N
        destinationButton.setName("destinationButton"); // NOI18N
        destinationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                destinationButtonActionPerformed(evt);
            }
        });
        add(destinationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, -1, -1));

        keepButton.setText(resourceMap.getString("keepButton.text")); // NOI18N
        keepButton.setName("keepButton"); // NOI18N
        keepButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                keepButtonActionPerformed(evt);
            }
        });
        add(keepButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 180, -1, -1));

        clusterButton.setText(resourceMap.getString("clusterButton.text")); // NOI18N
        clusterButton.setName("clusterButton"); // NOI18N
        clusterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clusterButtonActionPerformed(evt);
            }
        });
        add(clusterButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 230, -1, -1));

        abortButton.setText(resourceMap.getString("abortButton.text")); // NOI18N
        abortButton.setName("abortButton"); // NOI18N
        add(abortButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 82, -1));

        workProgress.setValue(0);
        workProgress.setStringPainted(true);
        workProgress.setName("workProgress"); // NOI18N
        workProgress.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                workProgressStateChanged(evt);
            }
        });
        add(workProgress, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 509, -1));

        sourceDir.setText(resourceMap.getString("sourceDir.text")); // NOI18N
        sourceDir.setName("sourceDir"); // NOI18N
        sourceDir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sourceDirActionPerformed(evt);
            }
        });
        add(sourceDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 70, 220, -1));

        destinationDir.setText(resourceMap.getString("destinationDir.text")); // NOI18N
        destinationDir.setName("destinationDir"); // NOI18N
        add(destinationDir, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 130, 220, 22));

        actionStatus.setFont(resourceMap.getFont("actionStatus.font")); // NOI18N
        actionStatus.setText(resourceMap.getString("actionStatus.text")); // NOI18N
        actionStatus.setName("actionStatus"); // NOI18N
        add(actionStatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 530, 21));

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMaximum(99);
        jSlider1.setMinimum(50);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setSnapToTicks(true);
        jSlider1.setName("jSlider1"); // NOI18N
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });
        add(jSlider1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 190, 190, -1));

        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, -1, -1));

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 210, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void clusterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clusterButtonActionPerformed
        try {
            clusterPanel.lekhyoHai("Indexing in progress .......");
            Indexer indexer =new Indexer(SourceDir.toString());
            try {
                indexer.index();
            } catch (Exception ex) {
                Logger.getLogger(clusterPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
           
            indexer.close();
        } catch (IOException ex) {
            Logger.getLogger(clusterPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        
        ProximityMatrix m1;
        try {
           
            m1 = new ProximityMatrix(DestinationDir.toString(),SourceDir.toString());
            try {
                m1.Calculator();
            } catch (CorruptIndexException ex) {
                Logger.getLogger(clusterPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(clusterPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (IOException ex) {
            Logger.getLogger(clusterPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
 workProgress.setValue(100);
 clusterPanel.lekhyoHai("Clustering successfully completed ");
 
  javax.swing.JOptionPane.showMessageDialog(null,"Files sucessfully clustered , thank you .", "done !", JOptionPane.INFORMATION_MESSAGE);
           
        
    }//GEN-LAST:event_clusterButtonActionPerformed

    private void destinationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_destinationButtonActionPerformed
        DestinationDir=getdirFile();
        destinationDir.setText(DestinationDir.getPath());// TODO add your handling code here:
        // TODO add your handling code here:
}//GEN-LAST:event_destinationButtonActionPerformed

    private void sourceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceButtonActionPerformed
        SourceDir=getdirFile();
        sourceDir.setText(SourceDir.getPath());
    
        // TODO add your handling code here:
}//GEN-LAST:event_sourceButtonActionPerformed

    private void sourceDirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceDirActionPerformed
        
        
        
        
        // TODO add your handling code here:
}//GEN-LAST:event_sourceDirActionPerformed

    private void keepButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_keepButtonActionPerformed
       if("no".equals(Status))
        {
            Status="yes";    
        
         System.out.print("delete gaar");}
        else 
        {  Status="no";
            System.out.print("delete nagaar");
        }
        
        if("yes".equals(Status))
        {
        javax.swing.JOptionPane.showMessageDialog(null,"The software deletes all your original files .", "warning !" , WIDTH);
        }
        
    }//GEN-LAST:event_keepButtonActionPerformed

    private void workProgressStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_workProgressStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_workProgressStateChanged

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
  clusterPanel.homogenety=(float)jSlider1.getValue()/100;     
    }//GEN-LAST:event_jSlider1StateChanged

    public static void lekhyoHai(String str)
    {   
        actionStatus.setText(str);
        actionStatus.repaint();  
        actionStatus.update(actionStatus.getGraphics());
    }
    
    //workProgress.setValue(25);
    
    public  static void workProgress(int i )
    {
workProgress.setValue(i);
workProgress.repaint();
workProgress.setStringPainted(true);
workProgress.update(workProgress.getGraphics());

    }
    
    private File  getdirFile() {
    JFileChooser fileChooser=new JFileChooser("open the directory ");
    fileChooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
    int result=fileChooser.showOpenDialog(this);
    if(result==JFileChooser.CANCEL_OPTION)
    {fileChooser.setVisible(false);         
    this.remove(fileChooser);
    return (new File("c:/users"));
    }   
    else {
        return fileChooser.getSelectedFile();
    }
    }   
    //<editor-fold defaultstate="collapsed" desc="comment">
    
    //</editor-fold>
  public static File SourceDir;
    File DestinationDir;
    public static String Status="no";
    public static float homogenety;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abortButton;
    private static javax.swing.JLabel actionStatus;
    private javax.swing.JButton clusterButton;
    private javax.swing.JButton destinationButton;
    private javax.swing.JTextField destinationDir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JRadioButton keepButton;
    private javax.swing.JToggleButton sourceButton;
    private javax.swing.JTextField sourceDir;
    private static javax.swing.JProgressBar workProgress;
    // End of variables declaration//GEN-END:variables
}
